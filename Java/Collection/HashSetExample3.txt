import java.util.HashSet;
import java.util.Objects;

class StudentRecord {
    private int id;
    private String name;
    private int age;
    private String sex;

    public StudentRecord(int id, String name, int age, String sex) {
        this.id = id;
        this.name = name;
        this.age = age;
        this.sex = sex;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getSex() {
        return sex;
    }

    @Override
    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Age: " + age + ", Sex: " + sex;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StudentRecord)) return false;
        StudentRecord that = (StudentRecord) o;
        return id == that.id;
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }
}

public class HashSetExample {
    public static void main(String[] args) {
        // Create a HashSet to store student records
        HashSet<StudentRecord> studentSet = new HashSet<>();

        // Create student records and add them to the HashSet
        StudentRecord student1 = new StudentRecord(1, "John Doe", 20, "Male");
        StudentRecord student2 = new StudentRecord(2, "Jane Smith", 19, "Female");
        StudentRecord student3 = new StudentRecord(3, "David Johnson", 21, "Male");
        StudentRecord student4 = new StudentRecord(4, "Emily Brown", 18, "Female");

        studentSet.add(student1);
        studentSet.add(student2);
        studentSet.add(student3);
        studentSet.add(student4);

        // Display the student records in the HashSet
        for (StudentRecord student : studentSet) {
            System.out.println(student);
        }
    }
}


Output:

ID: 1, Name: John Doe, Age: 20, Sex: Male
ID: 2, Name: Jane Smith, Age: 19, Sex: Female
ID: 3, Name: David Johnson, Age: 21, Sex: Male
ID: 4, Name: Emily Brown, Age: 18, Sex: Female


In this updated example, the StudentRecord class remains unchanged from the previous example. The equals() and hashCode() methods are overridden based on the id attribute, ensuring that two StudentRecord objects with the same id are considered equal.

The HashSetExample class remains the same, creating StudentRecord objects and adding them to the HashSet as before. The equality and uniqueness of the records in the HashSet are now determined by the overridden equals() and hashCode() methods.
